{
    "version": 3,
    "terraform_version": "0.11.8",
    "serial": 32,
    "lineage": "982e629a-f621-49df-af47-bdd764bbfe61",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.http.my_ip": {
                    "type": "http",
                    "depends_on": [],
                    "primary": {
                        "id": "2018-10-06 14:37:08.551547383 +0000 UTC",
                        "attributes": {
                            "body": "74.78.41.33\n",
                            "id": "2018-10-06 14:37:08.551547383 +0000 UTC",
                            "url": "http://icanhazip.com"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.http"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "snowplow"
            ],
            "outputs": {},
            "resources": {
                "aws_alb_target_group.alb_target_grp": {
                    "type": "aws_alb_target_group",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-snowplow-lb-tg/c2f6c74763896e22",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-snowplow-lb-tg/c2f6c74763896e22",
                            "arn_suffix": "targetgroup/prod-bostata-snowplow-lb-tg/c2f6c74763896e22",
                            "deregistration_delay": "300",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "2",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/health",
                            "health_check.0.port": "8080",
                            "health_check.0.protocol": "HTTP",
                            "health_check.0.timeout": "3",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-snowplow-lb-tg/c2f6c74763896e22",
                            "name": "prod-bostata-snowplow-lb-tg",
                            "port": "8080",
                            "protocol": "HTTP",
                            "proxy_protocol_v2": "false",
                            "slow_start": "0",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "1800",
                            "stickiness.0.enabled": "true",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "0",
                            "target_type": "instance",
                            "vpc_id": "vpc-0d38582b08181cf41"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_dynamodb_table.enricher_checkpoint": {
                    "type": "aws_dynamodb_table",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-bostata-enricher-checkpoint",
                        "attributes": {
                            "arn": "arn:aws:dynamodb:us-east-1:329442876070:table/prod-bostata-enricher-checkpoint",
                            "attribute.#": "1",
                            "attribute.2363179263.name": "leaseKey",
                            "attribute.2363179263.type": "S",
                            "global_secondary_index.#": "0",
                            "hash_key": "leaseKey",
                            "id": "prod-bostata-enricher-checkpoint",
                            "local_secondary_index.#": "0",
                            "name": "prod-bostata-enricher-checkpoint",
                            "point_in_time_recovery.#": "1",
                            "point_in_time_recovery.0.enabled": "false",
                            "read_capacity": "5",
                            "server_side_encryption.#": "0",
                            "stream_arn": "",
                            "stream_enabled": "false",
                            "stream_label": "",
                            "stream_view_type": "",
                            "tags.%": "3",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.System": "snowplow",
                            "ttl.#": "0",
                            "write_capacity": "5"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_access_key.operator_key": {
                    "type": "aws_iam_access_key",
                    "depends_on": [
                        "aws_iam_user.operator"
                    ],
                    "primary": {
                        "id": "AKIAJVD35A3PGJXJIVFQ",
                        "attributes": {
                            "id": "AKIAJVD35A3PGJXJIVFQ",
                            "secret": "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",
                            "ses_smtp_password": "AkCB/FUPTdqzwxS5B6Uk+dOqTBZSyWcphsHmhVqF7idr",
                            "status": "Active",
                            "user": "prod-snowplow-operator"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_user.operator": {
                    "type": "aws_iam_user",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-snowplow-operator",
                        "attributes": {
                            "arn": "arn:aws:iam::329442876070:user/prod-snowplow-operator",
                            "force_destroy": "false",
                            "id": "prod-snowplow-operator",
                            "name": "prod-snowplow-operator",
                            "path": "/",
                            "unique_id": "AIDAI7FCA7G2WIYZVGJCC"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_user_policy.operator_policy": {
                    "type": "aws_iam_user_policy",
                    "depends_on": [
                        "aws_iam_user.operator"
                    ],
                    "primary": {
                        "id": "prod-snowplow-operator:prod-bostata-snowplow-operator_iam_policy",
                        "attributes": {
                            "id": "prod-snowplow-operator:prod-bostata-snowplow-operator_iam_policy",
                            "name": "prod-bostata-snowplow-operator_iam_policy",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"kinesis:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"dynamodb:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"s3:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"cloudwatch:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n",
                            "user": "prod-snowplow-operator"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.instance_http_sg": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_security_group.lb_sg"
                    ],
                    "primary": {
                        "id": "sg-0847d46d0db4cf0b8",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:security-group/sg-0847d46d0db4cf0b8",
                            "description": "Access control for instances that listen on http port",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0847d46d0db4cf0b8",
                            "ingress.#": "4",
                            "ingress.1022656341.cidr_blocks.#": "1",
                            "ingress.1022656341.cidr_blocks.0": "74.78.41.33/32",
                            "ingress.1022656341.description": "",
                            "ingress.1022656341.from_port": "22",
                            "ingress.1022656341.ipv6_cidr_blocks.#": "0",
                            "ingress.1022656341.prefix_list_ids.#": "0",
                            "ingress.1022656341.protocol": "tcp",
                            "ingress.1022656341.security_groups.#": "0",
                            "ingress.1022656341.self": "false",
                            "ingress.1022656341.to_port": "22",
                            "ingress.2936365638.cidr_blocks.#": "0",
                            "ingress.2936365638.description": "",
                            "ingress.2936365638.from_port": "8080",
                            "ingress.2936365638.ipv6_cidr_blocks.#": "0",
                            "ingress.2936365638.prefix_list_ids.#": "0",
                            "ingress.2936365638.protocol": "tcp",
                            "ingress.2936365638.security_groups.#": "1",
                            "ingress.2936365638.security_groups.2800035685": "sg-07529e908d49f93d6",
                            "ingress.2936365638.self": "false",
                            "ingress.2936365638.to_port": "8080",
                            "ingress.3965103398.cidr_blocks.#": "1",
                            "ingress.3965103398.cidr_blocks.0": "74.78.41.33/32",
                            "ingress.3965103398.description": "",
                            "ingress.3965103398.from_port": "8080",
                            "ingress.3965103398.ipv6_cidr_blocks.#": "0",
                            "ingress.3965103398.prefix_list_ids.#": "0",
                            "ingress.3965103398.protocol": "tcp",
                            "ingress.3965103398.security_groups.#": "0",
                            "ingress.3965103398.self": "false",
                            "ingress.3965103398.to_port": "8080",
                            "ingress.963098821.cidr_blocks.#": "1",
                            "ingress.963098821.cidr_blocks.0": "74.78.41.33/32",
                            "ingress.963098821.description": "",
                            "ingress.963098821.from_port": "9100",
                            "ingress.963098821.ipv6_cidr_blocks.#": "0",
                            "ingress.963098821.prefix_list_ids.#": "0",
                            "ingress.963098821.protocol": "tcp",
                            "ingress.963098821.security_groups.#": "0",
                            "ingress.963098821.self": "false",
                            "ingress.963098821.to_port": "9100",
                            "name": "prod-bostata-snowplow-h-sg",
                            "owner_id": "329442876070",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-0d38582b08181cf41"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.lb_sg": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-07529e908d49f93d6",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:security-group/sg-07529e908d49f93d6",
                            "description": "Access control to the load balancer",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-07529e908d49f93d6",
                            "ingress.#": "2",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2617001939.cidr_blocks.#": "1",
                            "ingress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2617001939.description": "",
                            "ingress.2617001939.from_port": "443",
                            "ingress.2617001939.ipv6_cidr_blocks.#": "0",
                            "ingress.2617001939.prefix_list_ids.#": "0",
                            "ingress.2617001939.protocol": "tcp",
                            "ingress.2617001939.security_groups.#": "0",
                            "ingress.2617001939.self": "false",
                            "ingress.2617001939.to_port": "443",
                            "name": "prod-bostata-snowplow-lb-sg",
                            "owner_id": "329442876070",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-0d38582b08181cf41"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_file.collector_cloud_config": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_iam_access_key.operator_key"
                    ],
                    "primary": {
                        "id": "e77075fed889503b11d581a26edb378365e65e837b61e7fc6c2933eefb4150d5",
                        "attributes": {
                            "id": "e77075fed889503b11d581a26edb378365e65e837b61e7fc6c2933eefb4150d5",
                            "rendered": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n\n\nwrite_files:\n    - content: |\n            collector {\n              interface = \"0.0.0.0\"\n              port = 8080\n              p3p {\n                policyRef = \"/w3c/p3p.xml\"\n                CP = \"NOI DSP COR NID PSA OUR IND COM NAV STA\"\n              }\n              crossDomain {\n                enabled = false\n                domains = [ \"*\" ]\n                secure = true\n              }\n\n              cookie {\n                enabled = true\n                expiration = \"365 days\"\n                name = \"sp-nuid\"\n                #domain = \"{{cookieDomain}}\"\n              }\n\n              doNotTrackCookie {\n                enabled = false\n                name = \"dnt\"\n                value = \"1\"\n              }\n\n              cookieBounce {\n                enabled = false\n                name = \"n3pc\"\n                fallbackNetworkUserId = \"00000000-0000-4000-A000-000000000000\"\n                forwardedProtocolHeader = \"X-Forwarded-Proto\"\n              }\n\n              redirectMacro {\n                enabled = false\n                placeholder = \"[TOKEN]\"\n              }\n\n              rootResponse {\n                enabled = false\n                statusCode = 302\n                headers = {\n                    Location = \"https://127.0.0.1/\",\n                    X-Custom = \"something\"\n                }\n                body = \"302, redirecting\"\n              }\n\n              streams {\n                good = \"prod-snowplow-collector-good\"\n                bad = \"prod-snowplow-collector-bad\"\n                useIpAddressAsPartitionKey = false\n                sink {\n                  enabled = kinesis\n                  region = \"us-east-1\"\n                  threadPoolSize = 10\n                  aws {\n                    accessKey = \"AKIAJVD35A3PGJXJIVFQ\"\n                    secretKey = \"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\"\n                  }\n                  backoffPolicy {\n                    minBackoff = 1000\n                    maxBackoff = 10000\n                  }\n                }\n\n                buffer {\n                  byteLimit = 300000\n                  recordLimit = 5\n                  timeLimit = 5000\n                }\n              }\n            }\n\n            akka {\n              loglevel = DEBUG # 'OFF' for no logging, 'DEBUG' for all logging.\n              loggers = [\"akka.event.slf4j.Slf4jLogger\"]\n              http.server {\n                remote-address-header = on\n                raw-request-uri-header = on\n                parsing {\n                  max-uri-length = 32768\n                  uri-parsing-mode = relaxed\n                }\n              }\n            }\n      path: \"/opt/snowplow/config.hocon\"\n\n    - content: |\n            [Unit]\n            Description=Snowplow collector daemon\n            After=network.target\n\n            [Service]\n            PermissionsStartOnly=true\n            User=ubuntu\n            Group=ubuntu\n            ExecStartPre=/bin/chown -R ubuntu:ubuntu /opt/snowplow\n            ExecStartPre=/bin/mkdir /run/snowplow-collector\n            ExecStartPre=/bin/chown -R ubuntu:ubuntu /run/snowplow-collector\n            ExecStart=/usr/bin/java -jar /opt/snowplow/snowplow-stream-collector-kinesis-0.14.0.jar --config /opt/snowplow/config.hocon\n            ExecStop=/bin/kill -s TERM $MAINPID\n            ExecStopPost=/bin/rm -rf /run/snowplow-collector\n            Restart=always\n            RestartSec=5s\n\n            [Install]\n            WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-collector.service\"\n\n\nruncmd:\n    - [sh, -c, \"sudo apt-get install default-jre -y\"]\n    - [sh, -c, \"sudo mkdir /opt/snowplow\"]\n    - [sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_scala_stream_collector_kinesis_0.14.0.zip -O snowplow.zip\"]\n    - [sh, -c, \"unzip snowplow.zip\"]\n    - [sh, -c, \"mv snowplow-stream-collector-kinesis-0.14.0.jar /opt/snowplow/\"]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, enable, snowplow-collector.service ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "template": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n\n\nwrite_files:\n    - content: |\n            collector {\n              interface = \"0.0.0.0\"\n              port = ${snowplow_collector_ingress_port}\n              p3p {\n                policyRef = \"/w3c/p3p.xml\"\n                CP = \"NOI DSP COR NID PSA OUR IND COM NAV STA\"\n              }\n              crossDomain {\n                enabled = false\n                domains = [ \"*\" ]\n                secure = true\n              }\n\n              cookie {\n                enabled = true\n                expiration = \"365 days\"\n                name = \"sp-nuid\"\n                #domain = \"{{cookieDomain}}\"\n              }\n\n              doNotTrackCookie {\n                enabled = false\n                name = \"dnt\"\n                value = \"1\"\n              }\n\n              cookieBounce {\n                enabled = false\n                name = \"n3pc\"\n                fallbackNetworkUserId = \"00000000-0000-4000-A000-000000000000\"\n                forwardedProtocolHeader = \"X-Forwarded-Proto\"\n              }\n\n              redirectMacro {\n                enabled = false\n                placeholder = \"[TOKEN]\"\n              }\n\n              rootResponse {\n                enabled = false\n                statusCode = 302\n                headers = {\n                    Location = \"https://127.0.0.1/\",\n                    X-Custom = \"something\"\n                }\n                body = \"302, redirecting\"\n              }\n\n              streams {\n                good = \"${env}-${snowplow_system_tag}-${snowplow_collector_good_stream}\"\n                bad = \"${env}-${snowplow_system_tag}-${snowplow_collector_bad_stream}\"\n                useIpAddressAsPartitionKey = false\n                sink {\n                  enabled = kinesis\n                  region = \"${aws_region}\"\n                  threadPoolSize = 10\n                  aws {\n                    accessKey = \"${operator_access_key_id}\"\n                    secretKey = \"${operator_secret_access_key}\"\n                  }\n                  backoffPolicy {\n                    minBackoff = 1000\n                    maxBackoff = 10000\n                  }\n                }\n\n                buffer {\n                  byteLimit = 300000\n                  recordLimit = 5\n                  timeLimit = 5000\n                }\n              }\n            }\n\n            akka {\n              loglevel = DEBUG # 'OFF' for no logging, 'DEBUG' for all logging.\n              loggers = [\"akka.event.slf4j.Slf4jLogger\"]\n              http.server {\n                remote-address-header = on\n                raw-request-uri-header = on\n                parsing {\n                  max-uri-length = 32768\n                  uri-parsing-mode = relaxed\n                }\n              }\n            }\n      path: \"${snowplow_home}/config.hocon\"\n\n    - content: |\n            [Unit]\n            Description=Snowplow collector daemon\n            After=network.target\n\n            [Service]\n            PermissionsStartOnly=true\n            User=${snowplow_service_user}\n            Group=${snowplow_service_group}\n            ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} ${snowplow_home}\n            ExecStartPre=/bin/mkdir /run/snowplow-collector\n            ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} /run/snowplow-collector\n            ExecStart=/usr/bin/java -jar ${snowplow_home}/snowplow-stream-collector-kinesis-${snowplow_collector_version}.jar --config ${snowplow_home}/config.hocon\n            ExecStop=/bin/kill -s TERM $MAINPID\n            ExecStopPost=/bin/rm -rf /run/snowplow-collector\n            Restart=always\n            RestartSec=5s\n\n            [Install]\n            WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-collector.service\"\n\n\nruncmd:\n    - [sh, -c, \"sudo apt-get install default-jre -y\"]\n    - [sh, -c, \"sudo mkdir ${snowplow_home}\"]\n    - [sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_scala_stream_collector_kinesis_${snowplow_collector_version}.zip -O snowplow.zip\"]\n    - [sh, -c, \"unzip snowplow.zip\"]\n    - [sh, -c, \"mv snowplow-stream-collector-kinesis-${snowplow_collector_version}.jar ${snowplow_home}/\"]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, enable, snowplow-collector.service ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "vars.%": "12",
                            "vars.aws_region": "us-east-1",
                            "vars.env": "prod",
                            "vars.operator_access_key_id": "AKIAJVD35A3PGJXJIVFQ",
                            "vars.operator_secret_access_key": "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",
                            "vars.snowplow_collector_bad_stream": "collector-bad",
                            "vars.snowplow_collector_good_stream": "collector-good",
                            "vars.snowplow_collector_ingress_port": "8080",
                            "vars.snowplow_collector_version": "0.14.0",
                            "vars.snowplow_home": "/opt/snowplow",
                            "vars.snowplow_service_group": "ubuntu",
                            "vars.snowplow_service_user": "ubuntu",
                            "vars.snowplow_system_tag": "snowplow"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.enricher_cloud_config": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_iam_access_key.operator_key"
                    ],
                    "primary": {
                        "id": "90b25c1798ae62daa27f73916b58ee217f7cdc8a2bb8f982971cdecee5918c6b",
                        "attributes": {
                            "id": "90b25c1798ae62daa27f73916b58ee217f7cdc8a2bb8f982971cdecee5918c6b",
                            "rendered": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n\n\nwrite_files:\n    - content: |\n          enrich {\n            streams {\n              in {\n                raw = \"collector-good\"\n              }\n              out {\n                enriched = \"enricher-good\"\n                bad = \"enricher-bad\"\n                pii = \"enricher-pii\"\n                partitionKey = event_id\n              }\n\n              sourceSink {\n                enabled =  kinesis\n\n                region = \"us-east-1\"\n                aws {\n                  accessKey = \"AKIAJVD35A3PGJXJIVFQ\"\n                  secretKey = \"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\"\n                }\n                maxRecords = 10000\n                initialPosition = TRIM_HORIZON\n                #initialTimestamp = \"{{initialTimestamp}}\"\n                backoffPolicy {\n                  minBackoff = 1000\n                  maxBackoff = 10000\n                }\n                retries = 5\n              }\n\n              buffer {\n                byteLimit = 300000\n                recordLimit = 5\n                timeLimit = 5000\n              }\n              appName = \"enricher-checkpoint\"\n            }\n            # monitoring {\n            #   snowplow {\n            #     collectorUri = \"{{collectorUri}}\"\n            #     collectorPort = 80\n            #     appId = {{enrichAppName}}\n            #     method = GET\n            #   }\n            # }\n          }\n\n      path: \"/opt/snowplow/config.hocon\"\n\n\nruncmd:\n    - [sh, -c, \"sudo apt-get install default-jre -y\"]\n    - [sh, -c, \"sudo mkdir /opt/snowplow\"]\n    - [sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_stream_enrich_kinesis_0.13.0.zip -O snowplow.zip\"]\n    - [sh, -c, \"unzip snowplow.zip\"]\n    - [sh, -c, \"mv snowplow-stream-enrich-kinesis-0.13.0.jar /opt/snowplow/\"]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "template": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n\n\nwrite_files:\n    - content: |\n          enrich {\n            streams {\n              in {\n                raw = \"${snowplow_collector_good_stream}\"\n              }\n              out {\n                enriched = \"${snowplow_enricher_good_stream}\"\n                bad = \"${snowplow_enricher_bad_stream}\"\n                pii = \"${snowplow_enricher_pii_stream}\"\n                partitionKey = event_id\n              }\n\n              sourceSink {\n                enabled =  kinesis\n\n                region = \"${aws_region}\"\n                aws {\n                  accessKey = \"${operator_access_key_id}\"\n                  secretKey = \"${operator_secret_access_key}\"\n                }\n                maxRecords = 10000\n                initialPosition = TRIM_HORIZON\n                #initialTimestamp = \"{{initialTimestamp}}\"\n                backoffPolicy {\n                  minBackoff = 1000\n                  maxBackoff = 10000\n                }\n                retries = 5\n              }\n\n              buffer {\n                byteLimit = 300000\n                recordLimit = 5\n                timeLimit = 5000\n              }\n              appName = \"${snowplow_enricher_checkpoint_table}\"\n            }\n            # monitoring {\n            #   snowplow {\n            #     collectorUri = \"{{collectorUri}}\"\n            #     collectorPort = 80\n            #     appId = {{enrichAppName}}\n            #     method = GET\n            #   }\n            # }\n          }\n\n      path: \"${snowplow_home}/config.hocon\"\n\n\nruncmd:\n    - [sh, -c, \"sudo apt-get install default-jre -y\"]\n    - [sh, -c, \"sudo mkdir ${snowplow_home}\"]\n    - [sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_stream_enrich_kinesis_${snowplow_enricher_version}.zip -O snowplow.zip\"]\n    - [sh, -c, \"unzip snowplow.zip\"]\n    - [sh, -c, \"mv snowplow-stream-enrich-kinesis-${snowplow_enricher_version}.jar ${snowplow_home}/\"]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "vars.%": "14",
                            "vars.aws_region": "us-east-1",
                            "vars.env": "prod",
                            "vars.operator_access_key_id": "AKIAJVD35A3PGJXJIVFQ",
                            "vars.operator_secret_access_key": "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",
                            "vars.snowplow_collector_good_stream": "collector-good",
                            "vars.snowplow_enricher_bad_stream": "enricher-bad",
                            "vars.snowplow_enricher_checkpoint_table": "enricher-checkpoint",
                            "vars.snowplow_enricher_good_stream": "enricher-good",
                            "vars.snowplow_enricher_pii_stream": "enricher-pii",
                            "vars.snowplow_enricher_version": "0.13.0",
                            "vars.snowplow_home": "/opt/snowplow",
                            "vars.snowplow_service_group": "ubuntu",
                            "vars.snowplow_service_user": "ubuntu",
                            "vars.snowplow_system_tag": "snowplow"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "vpc"
            ],
            "outputs": {
                "subnets": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "subnet-018e65345f04278df",
                        "subnet-0f39f8f8cc3f76bd0"
                    ]
                },
                "vpc_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:ec2:us-east-1:329442876070:vpc/vpc-0d38582b08181cf41"
                },
                "vpc_cidr_block": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.0.0.0/16"
                },
                "vpc_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "vpc-0d38582b08181cf41"
                }
            },
            "resources": {
                "aws_internet_gateway.gw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "igw-024dd94efff840e8f",
                        "attributes": {
                            "id": "igw-024dd94efff840e8f",
                            "tags.%": "1",
                            "tags.Name": "prod_infra_gateway",
                            "vpc_id": "vpc-0d38582b08181cf41"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.rt": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.gw",
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "rtb-06d23ef8dcf3af812",
                        "attributes": {
                            "id": "rtb-06d23ef8dcf3af812",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.2525015634.cidr_block": "0.0.0.0/0",
                            "route.2525015634.egress_only_gateway_id": "",
                            "route.2525015634.gateway_id": "igw-024dd94efff840e8f",
                            "route.2525015634.instance_id": "",
                            "route.2525015634.ipv6_cidr_block": "",
                            "route.2525015634.nat_gateway_id": "",
                            "route.2525015634.network_interface_id": "",
                            "route.2525015634.vpc_peering_connection_id": "",
                            "tags.%": "0",
                            "vpc_id": "vpc-0d38582b08181cf41"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta.0": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rt",
                        "aws_subnet.subn.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-04e1f3e657145c043",
                        "attributes": {
                            "id": "rtbassoc-04e1f3e657145c043",
                            "route_table_id": "rtb-06d23ef8dcf3af812",
                            "subnet_id": "subnet-018e65345f04278df"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta.1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rt",
                        "aws_subnet.subn.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-0f48c99c2344c1010",
                        "attributes": {
                            "id": "rtbassoc-0f48c99c2344c1010",
                            "route_table_id": "rtb-06d23ef8dcf3af812",
                            "subnet_id": "subnet-0f39f8f8cc3f76bd0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.subn.0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-018e65345f04278df",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:subnet/subnet-018e65345f04278df",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "cidr_block": "10.0.0.0/24",
                            "id": "subnet-018e65345f04278df",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Env": "prod",
                            "tags.Name": "prod-infra-us-east-1a",
                            "vpc_id": "vpc-0d38582b08181cf41"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.subn.1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-0f39f8f8cc3f76bd0",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:subnet/subnet-0f39f8f8cc3f76bd0",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1b",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-0f39f8f8cc3f76bd0",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Env": "prod",
                            "tags.Name": "prod-infra-us-east-1b",
                            "vpc_id": "vpc-0d38582b08181cf41"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.vpc": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-0d38582b08181cf41",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:vpc/vpc-0d38582b08181cf41",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-0d8c0a3157b3888ac",
                            "default_route_table_id": "rtb-03f3b0da9009c1cbe",
                            "default_security_group_id": "sg-0ee7d298c49de12b3",
                            "dhcp_options_id": "dopt-203fea46",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "false",
                            "enable_dns_support": "true",
                            "id": "vpc-0d38582b08181cf41",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-03f3b0da9009c1cbe",
                            "tags.%": "1",
                            "tags.Name": "prod-infra"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2018-10-06 14:37:09.883534 +0000 UTC",
                        "attributes": {
                            "id": "2018-10-06 14:37:09.883534 +0000 UTC",
                            "names.#": "6",
                            "names.0": "us-east-1a",
                            "names.1": "us-east-1b",
                            "names.2": "us-east-1c",
                            "names.3": "us-east-1d",
                            "names.4": "us-east-1e",
                            "names.5": "us-east-1f"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                }
            },
            "depends_on": []
        }
    ]
}
