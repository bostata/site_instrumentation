{
    "version": 3,
    "terraform_version": "0.11.8",
    "serial": 14,
    "lineage": "b6a2b8da-f658-1373-31e6-63bd530cfbb8",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.http.my_ip": {
                    "type": "http",
                    "depends_on": [],
                    "primary": {
                        "id": "2018-10-08 02:01:06.77962743 +0000 UTC",
                        "attributes": {
                            "body": "2600:1000:b00c:cf9a:74df:9ea2:2f6a:8eae\n",
                            "id": "2018-10-08 02:01:06.77962743 +0000 UTC",
                            "url": "http://icanhazip.com"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.http"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "snowplow"
            ],
            "outputs": {},
            "resources": {
                "aws_alb.alb": {
                    "type": "aws_alb",
                    "depends_on": [
                        "aws_security_group.lb_sg"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:loadbalancer/app/prod-bostata-sp-alb/41d06dcd175ba5cf",
                        "attributes": {
                            "access_logs.#": "0",
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:329442876070:loadbalancer/app/prod-bostata-sp-alb/41d06dcd175ba5cf",
                            "arn_suffix": "app/prod-bostata-sp-alb/41d06dcd175ba5cf",
                            "dns_name": "prod-bostata-sp-alb-1917148572.us-east-1.elb.amazonaws.com",
                            "enable_deletion_protection": "false",
                            "enable_http2": "true",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:loadbalancer/app/prod-bostata-sp-alb/41d06dcd175ba5cf",
                            "idle_timeout": "60",
                            "internal": "false",
                            "ip_address_type": "ipv4",
                            "load_balancer_type": "application",
                            "name": "prod-bostata-sp-alb",
                            "security_groups.#": "1",
                            "security_groups.170064490": "sg-017e59791f2ed76ef",
                            "subnet_mapping.#": "0",
                            "subnets.#": "2",
                            "subnets.1201062067": "subnet-02a98d543be66cc8d",
                            "subnets.2083190335": "subnet-0522576de3e5662b3",
                            "tags.%": "0",
                            "vpc_id": "vpc-07201a7584b63d271",
                            "zone_id": "Z35SXDOTRQ7X7K"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_listener.alb_listener": {
                    "type": "aws_alb_listener",
                    "depends_on": [
                        "aws_alb.alb",
                        "aws_alb_target_group.alb_target_grp"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:listener/app/prod-bostata-sp-alb/41d06dcd175ba5cf/ac490e9029ba20ef",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:329442876070:listener/app/prod-bostata-sp-alb/41d06dcd175ba5cf/ac490e9029ba20ef",
                            "default_action.#": "1",
                            "default_action.0.fixed_response.#": "0",
                            "default_action.0.redirect.#": "0",
                            "default_action.0.target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621",
                            "default_action.0.type": "forward",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:listener/app/prod-bostata-sp-alb/41d06dcd175ba5cf/ac490e9029ba20ef",
                            "load_balancer_arn": "arn:aws:elasticloadbalancing:us-east-1:329442876070:loadbalancer/app/prod-bostata-sp-alb/41d06dcd175ba5cf",
                            "port": "80",
                            "protocol": "HTTP",
                            "ssl_policy": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_target_group.alb_target_grp": {
                    "type": "aws_alb_target_group",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621",
                        "attributes": {
                            "arn": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621",
                            "arn_suffix": "targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621",
                            "deregistration_delay": "300",
                            "health_check.#": "1",
                            "health_check.0.healthy_threshold": "2",
                            "health_check.0.interval": "30",
                            "health_check.0.matcher": "200",
                            "health_check.0.path": "/health",
                            "health_check.0.port": "8080",
                            "health_check.0.protocol": "HTTP",
                            "health_check.0.timeout": "3",
                            "health_check.0.unhealthy_threshold": "2",
                            "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621",
                            "name": "prod-bostata-sp-lb-tg",
                            "port": "8080",
                            "protocol": "HTTP",
                            "proxy_protocol_v2": "false",
                            "slow_start": "0",
                            "stickiness.#": "1",
                            "stickiness.0.cookie_duration": "1800",
                            "stickiness.0.enabled": "true",
                            "stickiness.0.type": "lb_cookie",
                            "tags.%": "0",
                            "target_type": "instance",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_alb_target_group_attachment.collector_alb_attachment": {
                    "type": "aws_alb_target_group_attachment",
                    "depends_on": [
                        "aws_alb_target_group.alb_target_grp",
                        "aws_instance.collector.*"
                    ],
                    "primary": {
                        "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621-20181008020150534200000001",
                        "attributes": {
                            "id": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621-20181008020150534200000001",
                            "port": "8080",
                            "target_group_arn": "arn:aws:elasticloadbalancing:us-east-1:329442876070:targetgroup/prod-bostata-sp-lb-tg/19d68a5b7a9d3621",
                            "target_id": "i-0e1cea8d0aba4d523"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_dynamodb_table.enricher_checkpoint": {
                    "type": "aws_dynamodb_table",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-bostata-enricher-checkpoint",
                        "attributes": {
                            "arn": "arn:aws:dynamodb:us-east-1:329442876070:table/prod-bostata-enricher-checkpoint",
                            "attribute.#": "1",
                            "attribute.2363179263.name": "leaseKey",
                            "attribute.2363179263.type": "S",
                            "global_secondary_index.#": "0",
                            "hash_key": "leaseKey",
                            "id": "prod-bostata-enricher-checkpoint",
                            "local_secondary_index.#": "0",
                            "name": "prod-bostata-enricher-checkpoint",
                            "point_in_time_recovery.#": "1",
                            "point_in_time_recovery.0.enabled": "false",
                            "read_capacity": "5",
                            "server_side_encryption.#": "0",
                            "stream_arn": "",
                            "stream_enabled": "false",
                            "stream_label": "",
                            "stream_view_type": "",
                            "tags.%": "3",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.System": "sp",
                            "ttl.#": "0",
                            "write_capacity": "5"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_dynamodb_table.s3_loader_checkpoint": {
                    "type": "aws_dynamodb_table",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-bostata-s3-loader-checkpoint",
                        "attributes": {
                            "arn": "arn:aws:dynamodb:us-east-1:329442876070:table/prod-bostata-s3-loader-checkpoint",
                            "attribute.#": "1",
                            "attribute.2363179263.name": "leaseKey",
                            "attribute.2363179263.type": "S",
                            "global_secondary_index.#": "0",
                            "hash_key": "leaseKey",
                            "id": "prod-bostata-s3-loader-checkpoint",
                            "local_secondary_index.#": "0",
                            "name": "prod-bostata-s3-loader-checkpoint",
                            "point_in_time_recovery.#": "1",
                            "point_in_time_recovery.0.enabled": "false",
                            "read_capacity": "5",
                            "server_side_encryption.#": "0",
                            "stream_arn": "",
                            "stream_enabled": "false",
                            "stream_label": "",
                            "stream_view_type": "",
                            "tags.%": "3",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.System": "sp",
                            "ttl.#": "0",
                            "write_capacity": "5"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_eip.collector_eip": {
                    "type": "aws_eip",
                    "depends_on": [
                        "aws_instance.collector.*"
                    ],
                    "primary": {
                        "id": "eipalloc-0e5abb04763ac0cd5",
                        "attributes": {
                            "association_id": "eipassoc-0ae763974ef184d77",
                            "domain": "vpc",
                            "id": "eipalloc-0e5abb04763ac0cd5",
                            "instance": "i-0e1cea8d0aba4d523",
                            "network_interface": "eni-0698efc1fb4a0eec2",
                            "private_ip": "10.0.0.70",
                            "public_ip": "107.23.39.133",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-collector-1-eip",
                            "tags.System": "sp",
                            "vpc": "true"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "delete": 180000000000,
                                "read": 900000000000,
                                "update": 300000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_access_key.operator_key": {
                    "type": "aws_iam_access_key",
                    "depends_on": [
                        "aws_iam_user.operator"
                    ],
                    "primary": {
                        "id": "AKIAI6OKTPJWAJDPNSTQ",
                        "attributes": {
                            "id": "AKIAI6OKTPJWAJDPNSTQ",
                            "secret": "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",
                            "ses_smtp_password": "AnBkVgFvTCxvvIVi0oTlohs9h6iEgQ9Yd/OJhbrxJoJY",
                            "status": "Active",
                            "user": "prod-sp-operator"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_user.operator": {
                    "type": "aws_iam_user",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-sp-operator",
                        "attributes": {
                            "arn": "arn:aws:iam::329442876070:user/prod-sp-operator",
                            "force_destroy": "false",
                            "id": "prod-sp-operator",
                            "name": "prod-sp-operator",
                            "path": "/",
                            "unique_id": "AIDAIZQI6XN7LIPX5KLFQ"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_user_policy.operator_policy": {
                    "type": "aws_iam_user_policy",
                    "depends_on": [
                        "aws_iam_user.operator"
                    ],
                    "primary": {
                        "id": "prod-sp-operator:prod-bostata-sp-operator-iam-policy",
                        "attributes": {
                            "id": "prod-sp-operator:prod-bostata-sp-operator-iam-policy",
                            "name": "prod-bostata-sp-operator-iam-policy",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"kinesis:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"dynamodb:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"s3:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"cloudwatch:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Action\": [\n                \"firehose:*\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n",
                            "user": "prod-sp-operator"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.collector": {
                    "type": "aws_instance",
                    "depends_on": [],
                    "primary": {
                        "id": "i-0e1cea8d0aba4d523",
                        "attributes": {
                            "ami": "ami-059eeca93cf09eebd",
                            "arn": "arn:aws:ec2:us-east-1:329442876070:instance/i-0e1cea8d0aba4d523",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "",
                            "id": "i-0e1cea8d0aba4d523",
                            "instance_state": "running",
                            "instance_type": "t2.small",
                            "ipv6_addresses.#": "0",
                            "key_name": "snowplow_prod",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0698efc1fb4a0eec2",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0698efc1fb4a0eec2",
                            "private_dns": "ip-10-0-0-70.ec2.internal",
                            "private_ip": "10.0.0.70",
                            "public_dns": "",
                            "public_ip": "52.90.63.225",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_id": "vol-0d657ba5784245bc6",
                            "root_block_device.0.volume_size": "50",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0522576de3e5662b3",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-collector-1",
                            "tags.System": "sp",
                            "tenancy": "default",
                            "user_data": "29cfec3f0d8b0505487dffe532d540c7dd3475d3",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2934299502": "sg-09e11ecebe6c03581"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.enricher": {
                    "type": "aws_instance",
                    "depends_on": [],
                    "primary": {
                        "id": "i-0fdb7fa9aeafa7320",
                        "attributes": {
                            "ami": "ami-059eeca93cf09eebd",
                            "arn": "arn:aws:ec2:us-east-1:329442876070:instance/i-0fdb7fa9aeafa7320",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "",
                            "id": "i-0fdb7fa9aeafa7320",
                            "instance_state": "running",
                            "instance_type": "t2.small",
                            "ipv6_addresses.#": "0",
                            "key_name": "snowplow_prod",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-03af5acbce8dc16b0",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-03af5acbce8dc16b0",
                            "private_dns": "ip-10-0-0-87.ec2.internal",
                            "private_ip": "10.0.0.87",
                            "public_dns": "",
                            "public_ip": "34.207.55.105",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "0",
                            "root_block_device.0.volume_id": "vol-007d653cfdd599b4b",
                            "root_block_device.0.volume_size": "50",
                            "root_block_device.0.volume_type": "standard",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0522576de3e5662b3",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-enricher-1",
                            "tags.System": "sp",
                            "tenancy": "default",
                            "user_data": "c78390927486470a7de0fd358817eb70446a0706",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.3656429445": "sg-0759016a717472e5c"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_kinesis_stream.collector_bad": {
                    "type": "aws_kinesis_stream",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-collector-bad",
                        "attributes": {
                            "arn": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-collector-bad",
                            "encryption_type": "NONE",
                            "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-collector-bad",
                            "kms_key_id": "",
                            "name": "prod-bostata-sp-collector-bad",
                            "retention_period": "24",
                            "shard_count": "1",
                            "shard_level_metrics.#": "2",
                            "shard_level_metrics.123700221": "IncomingBytes",
                            "shard_level_metrics.1625074920": "OutgoingBytes",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-collector-bad",
                            "tags.System": "sp"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 300000000000,
                                "delete": 7200000000000,
                                "update": 7200000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_kinesis_stream.collector_good": {
                    "type": "aws_kinesis_stream",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-collector-good",
                        "attributes": {
                            "arn": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-collector-good",
                            "encryption_type": "NONE",
                            "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-collector-good",
                            "kms_key_id": "",
                            "name": "prod-bostata-sp-collector-good",
                            "retention_period": "24",
                            "shard_count": "1",
                            "shard_level_metrics.#": "2",
                            "shard_level_metrics.123700221": "IncomingBytes",
                            "shard_level_metrics.1625074920": "OutgoingBytes",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-collector-good",
                            "tags.System": "sp"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 300000000000,
                                "delete": 7200000000000,
                                "update": 7200000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_kinesis_stream.enricher_bad": {
                    "type": "aws_kinesis_stream",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-bad",
                        "attributes": {
                            "arn": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-bad",
                            "encryption_type": "NONE",
                            "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-bad",
                            "kms_key_id": "",
                            "name": "prod-bostata-sp-enricher-bad",
                            "retention_period": "24",
                            "shard_count": "1",
                            "shard_level_metrics.#": "2",
                            "shard_level_metrics.123700221": "IncomingBytes",
                            "shard_level_metrics.1625074920": "OutgoingBytes",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-enricher-bad",
                            "tags.System": "sp"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 300000000000,
                                "delete": 7200000000000,
                                "update": 7200000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_kinesis_stream.enricher_good": {
                    "type": "aws_kinesis_stream",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-good",
                        "attributes": {
                            "arn": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-good",
                            "encryption_type": "NONE",
                            "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-good",
                            "kms_key_id": "",
                            "name": "prod-bostata-sp-enricher-good",
                            "retention_period": "24",
                            "shard_count": "1",
                            "shard_level_metrics.#": "2",
                            "shard_level_metrics.123700221": "IncomingBytes",
                            "shard_level_metrics.1625074920": "OutgoingBytes",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-enricher-good",
                            "tags.System": "sp"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 300000000000,
                                "delete": 7200000000000,
                                "update": 7200000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_kinesis_stream.enricher_pii": {
                    "type": "aws_kinesis_stream",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-pii",
                        "attributes": {
                            "arn": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-pii",
                            "encryption_type": "NONE",
                            "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-enricher-pii",
                            "kms_key_id": "",
                            "name": "prod-bostata-sp-enricher-pii",
                            "retention_period": "24",
                            "shard_count": "1",
                            "shard_level_metrics.#": "2",
                            "shard_level_metrics.123700221": "IncomingBytes",
                            "shard_level_metrics.1625074920": "OutgoingBytes",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-enricher-pii",
                            "tags.System": "sp"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 300000000000,
                                "delete": 7200000000000,
                                "update": 7200000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_kinesis_stream.s3_loader_bad": {
                    "type": "aws_kinesis_stream",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-s3-loader-bad",
                        "attributes": {
                            "arn": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-s3-loader-bad",
                            "encryption_type": "NONE",
                            "id": "arn:aws:kinesis:us-east-1:329442876070:stream/prod-bostata-sp-s3-loader-bad",
                            "kms_key_id": "",
                            "name": "prod-bostata-sp-s3-loader-bad",
                            "retention_period": "24",
                            "shard_count": "1",
                            "shard_level_metrics.#": "2",
                            "shard_level_metrics.123700221": "IncomingBytes",
                            "shard_level_metrics.1625074920": "OutgoingBytes",
                            "tags.%": "4",
                            "tags.Department": "bostata",
                            "tags.Env": "prod",
                            "tags.Name": "prod-bostata-sp-s3-loader-bad",
                            "tags.System": "sp"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 300000000000,
                                "delete": 7200000000000,
                                "update": 7200000000000
                            }
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_s3_bucket.delivery_bucket": {
                    "type": "aws_s3_bucket",
                    "depends_on": [],
                    "primary": {
                        "id": "prod-bostata-sp-collector-logs",
                        "attributes": {
                            "acceleration_status": "",
                            "acl": "private",
                            "arn": "arn:aws:s3:::prod-bostata-sp-collector-logs",
                            "bucket": "prod-bostata-sp-collector-logs",
                            "bucket_domain_name": "prod-bostata-sp-collector-logs.s3.amazonaws.com",
                            "bucket_regional_domain_name": "prod-bostata-sp-collector-logs.s3.amazonaws.com",
                            "cors_rule.#": "0",
                            "force_destroy": "false",
                            "hosted_zone_id": "Z3AQBSTGFYJSTF",
                            "id": "prod-bostata-sp-collector-logs",
                            "lifecycle_rule.#": "0",
                            "logging.#": "0",
                            "region": "us-east-1",
                            "replication_configuration.#": "0",
                            "request_payer": "BucketOwner",
                            "server_side_encryption_configuration.#": "0",
                            "tags.%": "0",
                            "versioning.#": "1",
                            "versioning.0.enabled": "false",
                            "versioning.0.mfa_delete": "false",
                            "website.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.instance_http_sg": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_security_group.lb_sg"
                    ],
                    "primary": {
                        "id": "sg-09e11ecebe6c03581",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:security-group/sg-09e11ecebe6c03581",
                            "description": "Access control for instances that listen on http port",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-09e11ecebe6c03581",
                            "ingress.#": "4",
                            "ingress.1058453514.cidr_blocks.#": "0",
                            "ingress.1058453514.description": "",
                            "ingress.1058453514.from_port": "8080",
                            "ingress.1058453514.ipv6_cidr_blocks.#": "0",
                            "ingress.1058453514.prefix_list_ids.#": "0",
                            "ingress.1058453514.protocol": "tcp",
                            "ingress.1058453514.security_groups.#": "1",
                            "ingress.1058453514.security_groups.170064490": "sg-017e59791f2ed76ef",
                            "ingress.1058453514.self": "false",
                            "ingress.1058453514.to_port": "8080",
                            "ingress.1166690619.cidr_blocks.#": "1",
                            "ingress.1166690619.cidr_blocks.0": "174.192.3.10/32",
                            "ingress.1166690619.description": "",
                            "ingress.1166690619.from_port": "9100",
                            "ingress.1166690619.ipv6_cidr_blocks.#": "0",
                            "ingress.1166690619.prefix_list_ids.#": "0",
                            "ingress.1166690619.protocol": "tcp",
                            "ingress.1166690619.security_groups.#": "0",
                            "ingress.1166690619.self": "false",
                            "ingress.1166690619.to_port": "9100",
                            "ingress.2086456300.cidr_blocks.#": "1",
                            "ingress.2086456300.cidr_blocks.0": "174.192.3.10/32",
                            "ingress.2086456300.description": "",
                            "ingress.2086456300.from_port": "8080",
                            "ingress.2086456300.ipv6_cidr_blocks.#": "0",
                            "ingress.2086456300.prefix_list_ids.#": "0",
                            "ingress.2086456300.protocol": "tcp",
                            "ingress.2086456300.security_groups.#": "0",
                            "ingress.2086456300.self": "false",
                            "ingress.2086456300.to_port": "8080",
                            "ingress.3045083576.cidr_blocks.#": "1",
                            "ingress.3045083576.cidr_blocks.0": "174.192.3.10/32",
                            "ingress.3045083576.description": "",
                            "ingress.3045083576.from_port": "22",
                            "ingress.3045083576.ipv6_cidr_blocks.#": "0",
                            "ingress.3045083576.prefix_list_ids.#": "0",
                            "ingress.3045083576.protocol": "tcp",
                            "ingress.3045083576.security_groups.#": "0",
                            "ingress.3045083576.self": "false",
                            "ingress.3045083576.to_port": "22",
                            "name": "prod-bostata-sp-http",
                            "owner_id": "329442876070",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.instance_no_http_sg": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-0759016a717472e5c",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:security-group/sg-0759016a717472e5c",
                            "description": "Access control for instances that do not listen on any http port",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0759016a717472e5c",
                            "ingress.#": "2",
                            "ingress.1166690619.cidr_blocks.#": "1",
                            "ingress.1166690619.cidr_blocks.0": "174.192.3.10/32",
                            "ingress.1166690619.description": "",
                            "ingress.1166690619.from_port": "9100",
                            "ingress.1166690619.ipv6_cidr_blocks.#": "0",
                            "ingress.1166690619.prefix_list_ids.#": "0",
                            "ingress.1166690619.protocol": "tcp",
                            "ingress.1166690619.security_groups.#": "0",
                            "ingress.1166690619.self": "false",
                            "ingress.1166690619.to_port": "9100",
                            "ingress.3045083576.cidr_blocks.#": "1",
                            "ingress.3045083576.cidr_blocks.0": "174.192.3.10/32",
                            "ingress.3045083576.description": "",
                            "ingress.3045083576.from_port": "22",
                            "ingress.3045083576.ipv6_cidr_blocks.#": "0",
                            "ingress.3045083576.prefix_list_ids.#": "0",
                            "ingress.3045083576.protocol": "tcp",
                            "ingress.3045083576.security_groups.#": "0",
                            "ingress.3045083576.self": "false",
                            "ingress.3045083576.to_port": "22",
                            "name": "prod-bostata-sp-no-http",
                            "owner_id": "329442876070",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.lb_sg": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-017e59791f2ed76ef",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:security-group/sg-017e59791f2ed76ef",
                            "description": "Access control to the load balancer",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-017e59791f2ed76ef",
                            "ingress.#": "2",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2617001939.cidr_blocks.#": "1",
                            "ingress.2617001939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2617001939.description": "",
                            "ingress.2617001939.from_port": "443",
                            "ingress.2617001939.ipv6_cidr_blocks.#": "0",
                            "ingress.2617001939.prefix_list_ids.#": "0",
                            "ingress.2617001939.protocol": "tcp",
                            "ingress.2617001939.security_groups.#": "0",
                            "ingress.2617001939.self": "false",
                            "ingress.2617001939.to_port": "443",
                            "name": "prod-bostata-sp-lb-sg",
                            "owner_id": "329442876070",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_file.collector_cloud_config": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_iam_access_key.operator_key"
                    ],
                    "primary": {
                        "id": "eecfad44f4d750ac5c0b1495222a9136bf10e50c3cf40819371bac8429765cca",
                        "attributes": {
                            "id": "eecfad44f4d750ac5c0b1495222a9136bf10e50c3cf40819371bac8429765cca",
                            "rendered": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n    - python-pip\n\n\nwrite_files:\n    - content: |\n          127.0.0.1 prod-bostata-sp-collector\n          # The following lines are desirable for IPv6 capable hosts\n          ::1 ip6-localhost ip6-loopback\n          fe00::0 ip6-localnet\n          ff00::0 ip6-mcastprefix\n          ff02::1 ip6-allnodes\n          ff02::2 ip6-allrouters\n          ff02::3 ip6-allhosts\n\n      path: \"/etc/hosts\"\n\n    - content: |\n          prod-bostata-sp-collector\n\n      path: \"/etc/hostname\"\n\n    - content: |\n            collector {\n              interface = \"0.0.0.0\"\n              port = 8080\n              p3p {\n                policyRef = \"/w3c/p3p.xml\"\n                CP = \"NOI DSP COR NID PSA OUR IND COM NAV STA\"\n              }\n              crossDomain {\n                enabled = false\n                domains = [ \"*\" ]\n                secure = true\n              }\n\n              cookie {\n                enabled = true\n                expiration = \"365 days\"\n                name = \"sp-nuid\"\n                #domain = \"{{cookieDomain}}\"\n              }\n\n              doNotTrackCookie {\n                enabled = false\n                name = \"dnt\"\n                value = \"1\"\n              }\n\n              cookieBounce {\n                enabled = false\n                name = \"n3pc\"\n                fallbackNetworkUserId = \"00000000-0000-4000-A000-000000000000\"\n                forwardedProtocolHeader = \"X-Forwarded-Proto\"\n              }\n\n              redirectMacro {\n                enabled = false\n                placeholder = \"[TOKEN]\"\n              }\n\n              rootResponse {\n                enabled = false\n                statusCode = 302\n                headers = {\n                    Location = \"https://127.0.0.1/\",\n                    X-Custom = \"something\"\n                }\n                body = \"302, redirecting\"\n              }\n\n              streams {\n                good = \"prod-bostata-sp-collector-good\"\n                bad = \"prod-bostata-sp-collector-bad\"\n                useIpAddressAsPartitionKey = false\n                sink {\n                  enabled = kinesis\n                  region = \"us-east-1\"\n                  threadPoolSize = 10\n                  aws {\n                    accessKey = \"AKIAI6OKTPJWAJDPNSTQ\"\n                    secretKey = \"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\"\n                  }\n                  backoffPolicy {\n                    minBackoff = 1000\n                    maxBackoff = 10000\n                  }\n                }\n\n                buffer {\n                  byteLimit = 500000\n                  recordLimit = 100\n                  timeLimit = 300\n                }\n              }\n            }\n\n            akka {\n              loglevel = DEBUG # 'OFF' for no logging, 'DEBUG' for all logging.\n              loggers = [\"akka.event.slf4j.Slf4jLogger\"]\n              http.server {\n                remote-address-header = on\n                raw-request-uri-header = on\n                parsing {\n                  max-uri-length = 32768\n                  uri-parsing-mode = relaxed\n                }\n              }\n            }\n      path: \"/opt/snowplow/config.hocon\"\n\n    - content: |\n            [Unit]\n            Description=Snowplow collector daemon\n            After=network.target\n\n            [Service]\n            PermissionsStartOnly=true\n            User=ubuntu\n            Group=ubuntu\n            ExecStartPre=/bin/chown -R ubuntu:ubuntu /opt/snowplow\n            ExecStartPre=/bin/mkdir /run/snowplow-collector\n            ExecStartPre=/bin/chown -R ubuntu:ubuntu /run/snowplow-collector\n            ExecStart=/usr/bin/java -jar /opt/snowplow/snowplow-stream-collector-kinesis-0.14.0.jar --config /opt/snowplow/config.hocon\n            ExecStop=/bin/kill -s TERM $MAINPID\n            ExecStopPost=/bin/rm -rf /run/snowplow-collector\n            Restart=always\n            RestartSec=5s\n\n            [Install]\n            WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-collector.service\"\n\nruncmd:\n    - [ sh, -c, \"sudo pip install --upgrade pip \u0026\u0026 sudo pip install ipython \u0026\u0026 sudo pip install snowplow-tracker\"]\n    - [ sh, -c, \"sudo apt-get install default-jre -y\" ]\n    - [ sh, -c, \"sudo mkdir /opt/snowplow\" ]\n    - [ sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_scala_stream_collector_kinesis_0.14.0.zip -O snowplow.zip\" ]\n    - [ sh, -c, \"unzip snowplow.zip\" ]\n    - [ sh, -c, \"mv snowplow-stream-collector-kinesis-0.14.0.jar /opt/snowplow/\" ]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, enable, snowplow-collector.service ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "template": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n    - python-pip\n\n\nwrite_files:\n    - content: |\n          127.0.0.1 ${env}-${department}-${snowplow_system_tag}-collector\n          # The following lines are desirable for IPv6 capable hosts\n          ::1 ip6-localhost ip6-loopback\n          fe00::0 ip6-localnet\n          ff00::0 ip6-mcastprefix\n          ff02::1 ip6-allnodes\n          ff02::2 ip6-allrouters\n          ff02::3 ip6-allhosts\n\n      path: \"/etc/hosts\"\n\n    - content: |\n          ${env}-${department}-${snowplow_system_tag}-collector\n\n      path: \"/etc/hostname\"\n\n    - content: |\n            collector {\n              interface = \"0.0.0.0\"\n              port = ${snowplow_collector_ingress_port}\n              p3p {\n                policyRef = \"/w3c/p3p.xml\"\n                CP = \"NOI DSP COR NID PSA OUR IND COM NAV STA\"\n              }\n              crossDomain {\n                enabled = false\n                domains = [ \"*\" ]\n                secure = true\n              }\n\n              cookie {\n                enabled = true\n                expiration = \"365 days\"\n                name = \"sp-nuid\"\n                #domain = \"{{cookieDomain}}\"\n              }\n\n              doNotTrackCookie {\n                enabled = false\n                name = \"dnt\"\n                value = \"1\"\n              }\n\n              cookieBounce {\n                enabled = false\n                name = \"n3pc\"\n                fallbackNetworkUserId = \"00000000-0000-4000-A000-000000000000\"\n                forwardedProtocolHeader = \"X-Forwarded-Proto\"\n              }\n\n              redirectMacro {\n                enabled = false\n                placeholder = \"[TOKEN]\"\n              }\n\n              rootResponse {\n                enabled = false\n                statusCode = 302\n                headers = {\n                    Location = \"https://127.0.0.1/\",\n                    X-Custom = \"something\"\n                }\n                body = \"302, redirecting\"\n              }\n\n              streams {\n                good = \"${env}-${department}-${snowplow_system_tag}-${snowplow_collector_good_stream}\"\n                bad = \"${env}-${department}-${snowplow_system_tag}-${snowplow_collector_bad_stream}\"\n                useIpAddressAsPartitionKey = false\n                sink {\n                  enabled = kinesis\n                  region = \"${aws_region}\"\n                  threadPoolSize = 10\n                  aws {\n                    accessKey = \"${operator_access_key_id}\"\n                    secretKey = \"${operator_secret_access_key}\"\n                  }\n                  backoffPolicy {\n                    minBackoff = 1000\n                    maxBackoff = 10000\n                  }\n                }\n\n                buffer {\n                  byteLimit = ${snowplow_collector_buffer_byte_limit}\n                  recordLimit = ${snowplow_collector_buffer_record_limit}\n                  timeLimit = ${snowplow_collector_buffer_time_limit}\n                }\n              }\n            }\n\n            akka {\n              loglevel = DEBUG # 'OFF' for no logging, 'DEBUG' for all logging.\n              loggers = [\"akka.event.slf4j.Slf4jLogger\"]\n              http.server {\n                remote-address-header = on\n                raw-request-uri-header = on\n                parsing {\n                  max-uri-length = 32768\n                  uri-parsing-mode = relaxed\n                }\n              }\n            }\n      path: \"${snowplow_home}/config.hocon\"\n\n    - content: |\n            [Unit]\n            Description=Snowplow collector daemon\n            After=network.target\n\n            [Service]\n            PermissionsStartOnly=true\n            User=${snowplow_service_user}\n            Group=${snowplow_service_group}\n            ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} ${snowplow_home}\n            ExecStartPre=/bin/mkdir /run/snowplow-collector\n            ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} /run/snowplow-collector\n            ExecStart=/usr/bin/java -jar ${snowplow_home}/snowplow-stream-collector-kinesis-${snowplow_collector_version}.jar --config ${snowplow_home}/config.hocon\n            ExecStop=/bin/kill -s TERM $MAINPID\n            ExecStopPost=/bin/rm -rf /run/snowplow-collector\n            Restart=always\n            RestartSec=5s\n\n            [Install]\n            WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-collector.service\"\n\nruncmd:\n    - [ sh, -c, \"sudo pip install --upgrade pip \u0026\u0026 sudo pip install ipython \u0026\u0026 sudo pip install snowplow-tracker\"]\n    - [ sh, -c, \"sudo apt-get install default-jre -y\" ]\n    - [ sh, -c, \"sudo mkdir ${snowplow_home}\" ]\n    - [ sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_scala_stream_collector_kinesis_${snowplow_collector_version}.zip -O snowplow.zip\" ]\n    - [ sh, -c, \"unzip snowplow.zip\" ]\n    - [ sh, -c, \"mv snowplow-stream-collector-kinesis-${snowplow_collector_version}.jar ${snowplow_home}/\" ]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, enable, snowplow-collector.service ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "vars.%": "16",
                            "vars.aws_region": "us-east-1",
                            "vars.department": "bostata",
                            "vars.env": "prod",
                            "vars.operator_access_key_id": "AKIAI6OKTPJWAJDPNSTQ",
                            "vars.operator_secret_access_key": "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",
                            "vars.snowplow_collector_bad_stream": "collector-bad",
                            "vars.snowplow_collector_buffer_byte_limit": "500000",
                            "vars.snowplow_collector_buffer_record_limit": "100",
                            "vars.snowplow_collector_buffer_time_limit": "300",
                            "vars.snowplow_collector_good_stream": "collector-good",
                            "vars.snowplow_collector_ingress_port": "8080",
                            "vars.snowplow_collector_version": "0.14.0",
                            "vars.snowplow_home": "/opt/snowplow",
                            "vars.snowplow_service_group": "ubuntu",
                            "vars.snowplow_service_user": "ubuntu",
                            "vars.snowplow_system_tag": "sp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.enricher_cloud_config": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_alb.alb",
                        "aws_iam_access_key.operator_key"
                    ],
                    "primary": {
                        "id": "f0c98e22394589765365f9eda1380baee8afa96704be2d222dd06ea6b6cdb278",
                        "attributes": {
                            "id": "f0c98e22394589765365f9eda1380baee8afa96704be2d222dd06ea6b6cdb278",
                            "rendered": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n    - python-pip\n\n\nwrite_files:\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow.enrichments/http_header_extractor_config/jsonschema/1-0-0\",\n                \"data\": {\n                  \"name\": \"http_header_extractor_config\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow.enrichments\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"headersPattern\": [\".*\"]\n                  }\n                }\n              }\n      path: \"/opt/snowplow/enrichments/http_header_extractor_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/cookie_extractor_config/jsonschema/1-0-0\",\n                \"data\": {\n                  \"name\": \"cookie_extractor_config\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"cookies\": [\"sp\"]\n                  }\n                }\n              }\n      path: \"/opt/snowplow/enrichments/cookie_extractor_config.json\"\n\n    - content: |\n              {\n                  \"schema\": \"iglu:com.snowplowanalytics.snowplow/event_fingerprint_config/jsonschema/1-0-0\",\n\n                  \"data\": {\n\n                      \"name\": \"event_fingerprint_config\",\n                      \"vendor\": \"com.snowplowanalytics.snowplow\",\n                      \"enabled\": true,\n                      \"parameters\": {\n                          \"excludeParameters\": [\"eid\", \"stm\"],\n                          \"hashAlgorithm\": \"MD5\"\n                      }\n                  }\n              }\n      path: \"/opt/snowplow/enrichments/event_fingerprint_enrichment.json\"\n\n    - content: |\n              {\n                  \"schema\": \"iglu:com.snowplowanalytics.snowplow/user_agent_utils_config/jsonschema/1-0-0\",\n                  \"data\": {\n                      \"vendor\": \"com.snowplowanalytics.snowplow\",\n                      \"name\": \"user_agent_utils_config\",\n                      \"enabled\": true,\n                      \"parameters\": {}\n                }\n              }\n      path: \"/opt/snowplow/enrichments/user_agent_utils_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/ua_parser_config/jsonschema/1-0-0\",\n                \"data\": {\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"name\": \"ua_parser_config\",\n                  \"enabled\": true,\n                  \"parameters\": {}\n                }\n              }\n      path: \"/opt/snowplow/enrichments/ua_parser_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/referer_parser/jsonschema/1-0-0\",\n\n                \"data\": {\n\n                  \"name\": \"referer_parser\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"internalDomains\": [\n                      \"*.bostata.com\",\n                    ]\n                  }\n                }\n              }\n      path: \"/opt/snowplow/enrichments/referrer_parser_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/campaign_attribution/jsonschema/1-0-1\",\n\n                \"data\": {\n\n                  \"name\": \"campaign_attribution\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"mapping\": \"static\",\n                    \"fields\": {\n                      \"mktMedium\": [\"utm_medium\"],\n                      \"mktSource\": [\"utm_source\"],\n                      \"mktTerm\": [\"utm_term\"],\n                      \"mktContent\": [\"utm_content\"],\n                      \"mktCampaign\": [\"utm_campaign\"]\n                    }\n                  }\n                }\n              }\n      path: \"/opt/snowplow/enrichments/campaign_attribution_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/ip_lookups/jsonschema/2-0-0\",\n\n                \"data\": {\n\n                  \"name\": \"ip_lookups\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"geo\": {\n                      \"database\": \"GeoLite2-City.mmdb\",\n                      \"uri\": \"http://snowplow-hosted-assets.s3.amazonaws.com/third-party/maxmind\"\n                    }\n                  }\n                }\n              }\n      path: \"/opt/snowplow/enrichments/ip_lookups_config.json\"\n\n    - content: |\n          127.0.0.1 prod-bostata-sp-enricher\n          # The following lines are desirable for IPv6 capable hosts\n          ::1 ip6-localhost ip6-loopback\n          fe00::0 ip6-localnet\n          ff00::0 ip6-mcastprefix\n          ff02::1 ip6-allnodes\n          ff02::2 ip6-allrouters\n          ff02::3 ip6-allhosts\n\n      path: \"/etc/hosts\"\n\n    - content: |\n          prod-bostata-sp-enricher\n\n      path: \"/etc/hostname\"\n\n    - content: |\n          enrich {\n            streams {\n              in {\n                raw = \"prod-bostata-sp-collector-good\"\n              }\n              out {\n                enriched = \"prod-bostata-sp-enricher-good\"\n                bad = \"prod-bostata-sp-enricher-bad\"\n                pii = \"prod-bostata-sp-enricher-pii\"\n                partitionKey = event_id\n              }\n\n              sourceSink {\n                enabled =  kinesis\n\n                region = \"us-east-1\"\n                aws {\n                  accessKey = \"AKIAI6OKTPJWAJDPNSTQ\"\n                  secretKey = \"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\"\n                }\n                maxRecords = 10000\n                initialPosition = TRIM_HORIZON\n                #initialTimestamp = \"{{initialTimestamp}}\"\n                backoffPolicy {\n                  minBackoff = 1000\n                  maxBackoff = 10000\n                }\n                retries = 5\n              }\n\n              buffer {\n                byteLimit = 500000\n                recordLimit = 100\n                timeLimit = 300\n              }\n              appName = \"prod-bostata-enricher-checkpoint\"\n            }\n            monitoring {\n              snowplow {\n                collectorUri = prod-bostata-sp-alb-1917148572.us-east-1.elb.amazonaws.com\n                collectorPort = 8080\n                appId = enricher-monitoring\n                method = GET\n              }\n            }\n          }\n\n      path: \"/opt/snowplow/enricher-config.hocon\"\n\n    - content: |\n            {\n              \"schema\": \"iglu:com.snowplowanalytics.iglu/resolver-config/jsonschema/1-0-1\",\n              \"data\": {\n                \"cacheSize\": 500,\n                \"repositories\": [\n                  {\n                    \"name\": \"Iglu Central\",\n                    \"priority\": 0,\n                    \"vendorPrefixes\": [ \"com.snowplowanalytics\" ],\n                    \"connection\": {\n                      \"http\": {\n                        \"uri\": \"http://iglucentral.com\"\n                      }\n                    }\n                  },\n                  {\n                    \"name\": \"Iglu Central - GCP Mirror\",\n                    \"priority\": 1,\n                    \"vendorPrefixes\": [ \"com.snowplowanalytics\" ],\n                    \"connection\": {\n                      \"http\": {\n                        \"uri\": \"http://mirror01.iglucentral.com\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n      path: \"/opt/snowplow/resolver.js\"\n\n    - content: |\n          [Unit]\n          Description=Snowplow enricher daemon\n          After=network.target\n\n          [Service]\n          PermissionsStartOnly=true\n          User=ubuntu\n          Group=ubuntu\n          ExecStartPre=/bin/chown -R ubuntu:ubuntu /opt/snowplow\n          ExecStartPre=/bin/mkdir /run/snowplow-enricher\n          ExecStartPre=/bin/chown -R ubuntu:ubuntu /run/snowplow-enricher\n          ExecStart=/usr/bin/java -jar /opt/snowplow/snowplow-stream-enrich-kinesis-0.19.1.jar --config /opt/snowplow/enricher-config.hocon --resolver file:/opt/snowplow/resolver.js --enrichments file:/opt/snowplow/\n          ExecStop=/bin/kill -s TERM $MAINPID\n          ExecStopPost=/bin/rm -rf /run/snowplow-enricher\n          Restart=always\n          RestartSec=5s\n\n          [Install]\n          WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-enricher.service\"\n\n    - content: |\n          source = \"kinesis\"\n          sink = \"kinesis\"\n\n          aws {\n            accessKey = \"AKIAI6OKTPJWAJDPNSTQ\"\n            secretKey = \"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\"\n          }\n\n          nsq {\n            channelName = \"{{nsqSourceChannelName}}\"\n            host = \"{{nsqHost}}\"\n            port = 1\n            lookupPort = 1\n          }\n\n          kinesis {\n            initialPosition = \"TRIM_HORIZON\"\n            maxRecords = 10000\n            region = \"us-east-1\"\n            appName = \"prod-bostata-s3-loader-checkpoint\"\n          }\n\n          streams {\n            inStreamName = \"prod-bostata-sp-enricher-good\"\n            outStreamName = \"prod-bostata-sp-s3-loader-bad\"\n            buffer {\n              byteLimit = 500000\n              recordLimit = 100\n              timeLimit = 300\n            }\n          }\n\n          s3 {\n            region = \"us-east-1\"\n            bucket = \"prod-bostata-sp-collector-logs\"\n            directoryPattern = \"enriched/good/{YYYY}/{MM}/{dd}\"\n            format = \"gzip\"\n            maxTimeout = 2000\n          }\n\n          monitoring {\n            snowplow{\n              collectorUri = \"prod-bostata-sp-alb-1917148572.us-east-1.elb.amazonaws.com\"\n              collectorPort = 8080\n              appId = \"s3-loader-monitoring\"\n              method = \"GET\"\n            }\n          }\n      path: \"/opt/snowplow/s3-loader-config.hocon\"\n\n    - content: |\n          [Unit]\n          Description=Snowplow s3 loader daemon\n          After=network.target\n\n          [Service]\n          PermissionsStartOnly=true\n          User=ubuntu\n          Group=ubuntu\n          ExecStartPre=/bin/chown -R ubuntu:ubuntu /opt/snowplow\n          ExecStartPre=/bin/mkdir /run/snowplow-s3-loader\n          ExecStartPre=/bin/chown -R ubuntu:ubuntu /run/snowplow-s3-loader\n          ExecStart=/usr/bin/java -jar /opt/snowplow/snowplow-s3-loader-0.7.0-rc1.jar --config /opt/snowplow/s3-loader-config.hocon\n          ExecStop=/bin/kill -s TERM $MAINPID\n          ExecStopPost=/bin/rm -rf /run/snowplow-s3-loader\n          Restart=always\n          RestartSec=5s\n\n          [Install]\n          WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-s3-loader.service\"\n\n    - content: |\n          from snowplow_tracker import Subject, Tracker, Emitter\n          import time\n\n\n          SNOWPLOW_URL = 'prod-bostata-sp-alb-1917148572.us-east-1.elb.amazonaws.com'\n\n\n          def test_collectors():\n              e = Emitter(SNOWPLOW_URL)\n              t = Tracker(e)\n              t.subject.set_platform(\"test-plat\").set_user_id(\"test-user\").set_lang(\"en\")\n              while True:\n                  t.track_page_view(\"www.test-host.com\", \"test-page\", \"www.test-referrer.com\")\n                  time.sleep(0.2)\n\n\n          if __name__ == '__main__':\n              test_collectors()\n      path: \"/opt/snowplow/test_collectors.py\"\n\n\nruncmd:\n    - [ sh, -c, \"sudo pip install --upgrade pip \u0026\u0026 sudo pip install ipython \u0026\u0026 sudo pip install snowplow-tracker\"]\n    - [ sh, -c, \"sudo apt-get install default-jre -y\" ]\n    - [ sh, -c, \"sudo mkdir /opt/snowplow\" ]\n    - [ sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_stream_enrich_kinesis_0.19.1.zip -O sp-enricher.zip\" ]\n    - [ sh, -c, \"unzip sp-enricher.zip\" ]\n    - [ sh, -c, \"mv snowplow-stream-enrich-kinesis-0.19.1.jar /opt/snowplow/\" ]\n    - [ sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_s3_loader_0.7.0_rc1.zip -O sp-s3-loader.zip\" ]\n    - [ sh, -c, \"unzip sp-s3-loader.zip\" ]\n    - [sh, -c, \"mv snowplow-s3-loader-0.7.0-rc1.jar  /opt/snowplow/\"]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, enable, snowplow-enricher.service ]\n    - [ systemctl, enable, snowplow-s3-loader.service ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "template": "#cloud-config\npackage_update: true\npackage_upgrade: true\n\n\npackages:\n    - awscli\n    - unzip\n    - prometheus-node-exporter\n    - python-pip\n\n\nwrite_files:\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow.enrichments/http_header_extractor_config/jsonschema/1-0-0\",\n                \"data\": {\n                  \"name\": \"http_header_extractor_config\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow.enrichments\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"headersPattern\": [\".*\"]\n                  }\n                }\n              }\n      path: \"${snowplow_home}/enrichments/http_header_extractor_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/cookie_extractor_config/jsonschema/1-0-0\",\n                \"data\": {\n                  \"name\": \"cookie_extractor_config\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"cookies\": [\"sp\"]\n                  }\n                }\n              }\n      path: \"${snowplow_home}/enrichments/cookie_extractor_config.json\"\n\n    - content: |\n              {\n                  \"schema\": \"iglu:com.snowplowanalytics.snowplow/event_fingerprint_config/jsonschema/1-0-0\",\n\n                  \"data\": {\n\n                      \"name\": \"event_fingerprint_config\",\n                      \"vendor\": \"com.snowplowanalytics.snowplow\",\n                      \"enabled\": true,\n                      \"parameters\": {\n                          \"excludeParameters\": [\"eid\", \"stm\"],\n                          \"hashAlgorithm\": \"MD5\"\n                      }\n                  }\n              }\n      path: \"${snowplow_home}/enrichments/event_fingerprint_enrichment.json\"\n\n    - content: |\n              {\n                  \"schema\": \"iglu:com.snowplowanalytics.snowplow/user_agent_utils_config/jsonschema/1-0-0\",\n                  \"data\": {\n                      \"vendor\": \"com.snowplowanalytics.snowplow\",\n                      \"name\": \"user_agent_utils_config\",\n                      \"enabled\": true,\n                      \"parameters\": {}\n                }\n              }\n      path: \"${snowplow_home}/enrichments/user_agent_utils_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/ua_parser_config/jsonschema/1-0-0\",\n                \"data\": {\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"name\": \"ua_parser_config\",\n                  \"enabled\": true,\n                  \"parameters\": {}\n                }\n              }\n      path: \"${snowplow_home}/enrichments/ua_parser_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/referer_parser/jsonschema/1-0-0\",\n\n                \"data\": {\n\n                  \"name\": \"referer_parser\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"internalDomains\": [\n                      \"*.${primary_domain}\",\n                    ]\n                  }\n                }\n              }\n      path: \"${snowplow_home}/enrichments/referrer_parser_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/campaign_attribution/jsonschema/1-0-1\",\n\n                \"data\": {\n\n                  \"name\": \"campaign_attribution\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"mapping\": \"static\",\n                    \"fields\": {\n                      \"mktMedium\": [\"utm_medium\"],\n                      \"mktSource\": [\"utm_source\"],\n                      \"mktTerm\": [\"utm_term\"],\n                      \"mktContent\": [\"utm_content\"],\n                      \"mktCampaign\": [\"utm_campaign\"]\n                    }\n                  }\n                }\n              }\n      path: \"${snowplow_home}/enrichments/campaign_attribution_config.json\"\n\n    - content: |\n              {\n                \"schema\": \"iglu:com.snowplowanalytics.snowplow/ip_lookups/jsonschema/2-0-0\",\n\n                \"data\": {\n\n                  \"name\": \"ip_lookups\",\n                  \"vendor\": \"com.snowplowanalytics.snowplow\",\n                  \"enabled\": true,\n                  \"parameters\": {\n                    \"geo\": {\n                      \"database\": \"GeoLite2-City.mmdb\",\n                      \"uri\": \"http://snowplow-hosted-assets.s3.amazonaws.com/third-party/maxmind\"\n                    }\n                  }\n                }\n              }\n      path: \"${snowplow_home}/enrichments/ip_lookups_config.json\"\n\n    - content: |\n          127.0.0.1 ${env}-${department}-${snowplow_system_tag}-enricher\n          # The following lines are desirable for IPv6 capable hosts\n          ::1 ip6-localhost ip6-loopback\n          fe00::0 ip6-localnet\n          ff00::0 ip6-mcastprefix\n          ff02::1 ip6-allnodes\n          ff02::2 ip6-allrouters\n          ff02::3 ip6-allhosts\n\n      path: \"/etc/hosts\"\n\n    - content: |\n          ${env}-${department}-${snowplow_system_tag}-enricher\n\n      path: \"/etc/hostname\"\n\n    - content: |\n          enrich {\n            streams {\n              in {\n                raw = \"${env}-${department}-${snowplow_system_tag}-${snowplow_collector_good_stream}\"\n              }\n              out {\n                enriched = \"${env}-${department}-${snowplow_system_tag}-${snowplow_enricher_good_stream}\"\n                bad = \"${env}-${department}-${snowplow_system_tag}-${snowplow_enricher_bad_stream}\"\n                pii = \"${env}-${department}-${snowplow_system_tag}-${snowplow_enricher_pii_stream}\"\n                partitionKey = event_id\n              }\n\n              sourceSink {\n                enabled =  kinesis\n\n                region = \"${aws_region}\"\n                aws {\n                  accessKey = \"${operator_access_key_id}\"\n                  secretKey = \"${operator_secret_access_key}\"\n                }\n                maxRecords = 10000\n                initialPosition = TRIM_HORIZON\n                #initialTimestamp = \"{{initialTimestamp}}\"\n                backoffPolicy {\n                  minBackoff = 1000\n                  maxBackoff = 10000\n                }\n                retries = 5\n              }\n\n              buffer {\n                byteLimit = ${snowplow_enricher_buffer_byte_limit}\n                recordLimit = ${snowplow_enricher_buffer_record_limit}\n                timeLimit = ${snowplow_enricher_buffer_time_limit}\n              }\n              appName = \"${env}-${department}-${snowplow_enricher_checkpoint_table}\"\n            }\n            monitoring {\n              snowplow {\n                collectorUri = ${snowplow_collector_uri}\n                collectorPort = ${snowplow_collector_ingress_port}\n                appId = enricher-monitoring\n                method = GET\n              }\n            }\n          }\n\n      path: \"${snowplow_home}/enricher-config.hocon\"\n\n    - content: |\n            {\n              \"schema\": \"iglu:com.snowplowanalytics.iglu/resolver-config/jsonschema/1-0-1\",\n              \"data\": {\n                \"cacheSize\": 500,\n                \"repositories\": [\n                  {\n                    \"name\": \"Iglu Central\",\n                    \"priority\": 0,\n                    \"vendorPrefixes\": [ \"com.snowplowanalytics\" ],\n                    \"connection\": {\n                      \"http\": {\n                        \"uri\": \"http://iglucentral.com\"\n                      }\n                    }\n                  },\n                  {\n                    \"name\": \"Iglu Central - GCP Mirror\",\n                    \"priority\": 1,\n                    \"vendorPrefixes\": [ \"com.snowplowanalytics\" ],\n                    \"connection\": {\n                      \"http\": {\n                        \"uri\": \"http://mirror01.iglucentral.com\"\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n      path: \"${snowplow_home}/resolver.js\"\n\n    - content: |\n          [Unit]\n          Description=Snowplow enricher daemon\n          After=network.target\n\n          [Service]\n          PermissionsStartOnly=true\n          User=${snowplow_service_user}\n          Group=${snowplow_service_group}\n          ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} ${snowplow_home}\n          ExecStartPre=/bin/mkdir /run/snowplow-enricher\n          ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} /run/snowplow-enricher\n          ExecStart=/usr/bin/java -jar ${snowplow_home}/snowplow-stream-enrich-kinesis-${snowplow_enricher_version}.jar --config ${snowplow_home}/enricher-config.hocon --resolver file:${snowplow_home}/resolver.js --enrichments file:${snowplow_home}/\n          ExecStop=/bin/kill -s TERM $MAINPID\n          ExecStopPost=/bin/rm -rf /run/snowplow-enricher\n          Restart=always\n          RestartSec=5s\n\n          [Install]\n          WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-enricher.service\"\n\n    - content: |\n          source = \"kinesis\"\n          sink = \"kinesis\"\n\n          aws {\n            accessKey = \"${operator_access_key_id}\"\n            secretKey = \"${operator_secret_access_key}\"\n          }\n\n          nsq {\n            channelName = \"{{nsqSourceChannelName}}\"\n            host = \"{{nsqHost}}\"\n            port = 1\n            lookupPort = 1\n          }\n\n          kinesis {\n            initialPosition = \"TRIM_HORIZON\"\n            maxRecords = 10000\n            region = \"${aws_region}\"\n            appName = \"${env}-${department}-${snowplow_s3_loader_checkpoint_table}\"\n          }\n\n          streams {\n            inStreamName = \"${env}-${department}-${snowplow_system_tag}-${snowplow_enricher_good_stream}\"\n            outStreamName = \"${env}-${department}-${snowplow_system_tag}-${snowplow_s3_loader_bad_stream}\"\n            buffer {\n              byteLimit = ${snowplow_s3_loader_buffer_byte_limit}\n              recordLimit = ${snowplow_s3_loader_buffer_record_limit}\n              timeLimit = ${snowplow_s3_loader_buffer_time_limit}\n            }\n          }\n\n          s3 {\n            region = \"${aws_region}\"\n            bucket = \"${env}-${department}-${snowplow_system_tag}-${snowplow_s3_loader_bucket}\"\n            directoryPattern = \"enriched/good/{YYYY}/{MM}/{dd}\"\n            format = \"gzip\"\n            maxTimeout = 2000\n          }\n\n          monitoring {\n            snowplow{\n              collectorUri = \"${snowplow_collector_uri}\"\n              collectorPort = ${snowplow_collector_ingress_port}\n              appId = \"s3-loader-monitoring\"\n              method = \"GET\"\n            }\n          }\n      path: \"${snowplow_home}/s3-loader-config.hocon\"\n\n    - content: |\n          [Unit]\n          Description=Snowplow s3 loader daemon\n          After=network.target\n\n          [Service]\n          PermissionsStartOnly=true\n          User=${snowplow_service_user}\n          Group=${snowplow_service_group}\n          ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} ${snowplow_home}\n          ExecStartPre=/bin/mkdir /run/snowplow-s3-loader\n          ExecStartPre=/bin/chown -R ${snowplow_service_user}:${snowplow_service_group} /run/snowplow-s3-loader\n          ExecStart=/usr/bin/java -jar ${snowplow_home}/snowplow-s3-loader-${snowplow_s3_loader_version}-rc1.jar --config ${snowplow_home}/s3-loader-config.hocon\n          ExecStop=/bin/kill -s TERM $MAINPID\n          ExecStopPost=/bin/rm -rf /run/snowplow-s3-loader\n          Restart=always\n          RestartSec=5s\n\n          [Install]\n          WantedBy=multi-user.target\n      path: \"/etc/systemd/system/snowplow-s3-loader.service\"\n\n    - content: |\n          from snowplow_tracker import Subject, Tracker, Emitter\n          import time\n\n\n          SNOWPLOW_URL = '${snowplow_collector_uri}'\n\n\n          def test_collectors():\n              e = Emitter(SNOWPLOW_URL)\n              t = Tracker(e)\n              t.subject.set_platform(\"test-plat\").set_user_id(\"test-user\").set_lang(\"en\")\n              while True:\n                  t.track_page_view(\"www.test-host.com\", \"test-page\", \"www.test-referrer.com\")\n                  time.sleep(0.2)\n\n\n          if __name__ == '__main__':\n              test_collectors()\n      path: \"${snowplow_home}/test_collectors.py\"\n\n\nruncmd:\n    - [ sh, -c, \"sudo pip install --upgrade pip \u0026\u0026 sudo pip install ipython \u0026\u0026 sudo pip install snowplow-tracker\"]\n    - [ sh, -c, \"sudo apt-get install default-jre -y\" ]\n    - [ sh, -c, \"sudo mkdir ${snowplow_home}\" ]\n    - [ sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_stream_enrich_kinesis_${snowplow_enricher_version}.zip -O sp-enricher.zip\" ]\n    - [ sh, -c, \"unzip sp-enricher.zip\" ]\n    - [ sh, -c, \"mv snowplow-stream-enrich-kinesis-${snowplow_enricher_version}.jar ${snowplow_home}/\" ]\n    - [ sh, -c, \"wget https://bintray.com/snowplow/snowplow-generic/download_file?file_path=snowplow_s3_loader_${snowplow_s3_loader_version}_rc1.zip -O sp-s3-loader.zip\" ]\n    - [ sh, -c, \"unzip sp-s3-loader.zip\" ]\n    - [sh, -c, \"mv snowplow-s3-loader-${snowplow_s3_loader_version}-rc1.jar  ${snowplow_home}/\"]\n    - [ systemctl, daemon-reload ]\n    - [ systemctl, enable, prometheus-node-exporter ]\n    - [ systemctl, enable, snowplow-enricher.service ]\n    - [ systemctl, enable, snowplow-s3-loader.service ]\n    - [ systemctl, start, prometheus-node-exporter ]\n\n\npower_state:\n    delay: \"+0\"\n    mode: reboot\n    message: rebooting\n    timeout: 15    \n",
                            "vars.%": "28",
                            "vars.aws_region": "us-east-1",
                            "vars.department": "bostata",
                            "vars.env": "prod",
                            "vars.operator_access_key_id": "AKIAI6OKTPJWAJDPNSTQ",
                            "vars.operator_secret_access_key": "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",
                            "vars.primary_domain": "bostata.com",
                            "vars.snowplow_collector_good_stream": "collector-good",
                            "vars.snowplow_collector_ingress_port": "8080",
                            "vars.snowplow_collector_uri": "prod-bostata-sp-alb-1917148572.us-east-1.elb.amazonaws.com",
                            "vars.snowplow_enricher_bad_stream": "enricher-bad",
                            "vars.snowplow_enricher_buffer_byte_limit": "500000",
                            "vars.snowplow_enricher_buffer_record_limit": "100",
                            "vars.snowplow_enricher_buffer_time_limit": "300",
                            "vars.snowplow_enricher_checkpoint_table": "enricher-checkpoint",
                            "vars.snowplow_enricher_good_stream": "enricher-good",
                            "vars.snowplow_enricher_pii_stream": "enricher-pii",
                            "vars.snowplow_enricher_version": "0.19.1",
                            "vars.snowplow_home": "/opt/snowplow",
                            "vars.snowplow_s3_loader_bad_stream": "s3-loader-bad",
                            "vars.snowplow_s3_loader_bucket": "collector-logs",
                            "vars.snowplow_s3_loader_buffer_byte_limit": "500000",
                            "vars.snowplow_s3_loader_buffer_record_limit": "100",
                            "vars.snowplow_s3_loader_buffer_time_limit": "300",
                            "vars.snowplow_s3_loader_checkpoint_table": "s3-loader-checkpoint",
                            "vars.snowplow_s3_loader_version": "0.7.0",
                            "vars.snowplow_service_group": "ubuntu",
                            "vars.snowplow_service_user": "ubuntu",
                            "vars.snowplow_system_tag": "sp"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "vpc"
            ],
            "outputs": {
                "subnets": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "subnet-0522576de3e5662b3",
                        "subnet-02a98d543be66cc8d"
                    ]
                },
                "vpc_arn": {
                    "sensitive": false,
                    "type": "string",
                    "value": "arn:aws:ec2:us-east-1:329442876070:vpc/vpc-07201a7584b63d271"
                },
                "vpc_cidr_block": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10.0.0.0/16"
                },
                "vpc_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "vpc-07201a7584b63d271"
                }
            },
            "resources": {
                "aws_internet_gateway.gw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "igw-04a43c02e80e6f82b",
                        "attributes": {
                            "id": "igw-04a43c02e80e6f82b",
                            "tags.%": "1",
                            "tags.Name": "prod_infra_gateway",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.rt": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.gw",
                        "aws_vpc.vpc"
                    ],
                    "primary": {
                        "id": "rtb-0cec8dab7709ec81e",
                        "attributes": {
                            "id": "rtb-0cec8dab7709ec81e",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.733746055.cidr_block": "0.0.0.0/0",
                            "route.733746055.egress_only_gateway_id": "",
                            "route.733746055.gateway_id": "igw-04a43c02e80e6f82b",
                            "route.733746055.instance_id": "",
                            "route.733746055.ipv6_cidr_block": "",
                            "route.733746055.nat_gateway_id": "",
                            "route.733746055.network_interface_id": "",
                            "route.733746055.vpc_peering_connection_id": "",
                            "tags.%": "0",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta.0": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rt",
                        "aws_subnet.subn.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-04405563ce309534e",
                        "attributes": {
                            "id": "rtbassoc-04405563ce309534e",
                            "route_table_id": "rtb-0cec8dab7709ec81e",
                            "subnet_id": "subnet-0522576de3e5662b3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta.1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rt",
                        "aws_subnet.subn.*"
                    ],
                    "primary": {
                        "id": "rtbassoc-0d93b327a1d31f3b4",
                        "attributes": {
                            "id": "rtbassoc-0d93b327a1d31f3b4",
                            "route_table_id": "rtb-0cec8dab7709ec81e",
                            "subnet_id": "subnet-02a98d543be66cc8d"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.subn.0": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-0522576de3e5662b3",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:subnet/subnet-0522576de3e5662b3",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "cidr_block": "10.0.0.0/24",
                            "id": "subnet-0522576de3e5662b3",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Env": "prod",
                            "tags.Name": "prod-infra-us-east-1a",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.subn.1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.vpc",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-02a98d543be66cc8d",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:subnet/subnet-02a98d543be66cc8d",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1b",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-02a98d543be66cc8d",
                            "map_public_ip_on_launch": "false",
                            "tags.%": "2",
                            "tags.Env": "prod",
                            "tags.Name": "prod-infra-us-east-1b",
                            "vpc_id": "vpc-07201a7584b63d271"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.vpc": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-07201a7584b63d271",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:329442876070:vpc/vpc-07201a7584b63d271",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-084c89fb9e796f309",
                            "default_route_table_id": "rtb-0aa22a7b81d1f7c2b",
                            "default_security_group_id": "sg-026ad0389904add4c",
                            "dhcp_options_id": "dopt-203fea46",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "false",
                            "enable_dns_support": "true",
                            "id": "vpc-07201a7584b63d271",
                            "instance_tenancy": "default",
                            "main_route_table_id": "rtb-0aa22a7b81d1f7c2b",
                            "tags.%": "1",
                            "tags.Name": "prod-infra"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2018-10-08 02:01:08.652734 +0000 UTC",
                        "attributes": {
                            "id": "2018-10-08 02:01:08.652734 +0000 UTC",
                            "names.#": "6",
                            "names.0": "us-east-1a",
                            "names.1": "us-east-1b",
                            "names.2": "us-east-1c",
                            "names.3": "us-east-1d",
                            "names.4": "us-east-1e",
                            "names.5": "us-east-1f"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                }
            },
            "depends_on": []
        }
    ]
}
